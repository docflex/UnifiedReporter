name: Build and Release UnifiedReporter

on:
  push:
    branches: [ main ]

  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (e.g. 1.0.0-rc.1)'
        required: false
        type: string
      is_release_candidate:
        description: 'Mark this run as a release candidate?'
        required: false
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build with Maven
        run: mvn -B clean install -DskipTests

      - name: Run Tests
        run: mvn test

      - name: Archive JAR
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: unified-reporter-jar
          path: target/*.jar

  release:
    needs: build
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.is_release_candidate == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required to push tags and create releases

    steps:
      - name: Check required input
        if: ${{ github.event.inputs.release_version == '' }}
        run: |
          echo "ERROR: release_version is required when is_release_candidate is true"
          exit 1

      - name: Checkout Repository (full)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Required to push tags

      - name: Set up Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Check if Tag Already Exists
        id: check_tag
        run: |
          TAG="v${{ github.event.inputs.release_version }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
          echo "exists=true" >> "$GITHUB_OUTPUT"
          else
          echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create and Push Git Tag
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          git tag -a "v${{ github.event.inputs.release_version }}" -m "Release v${{ github.event.inputs.release_version }}"
          git push origin "v${{ github.event.inputs.release_version }}"

      - name: Create GitHub Release
        if: steps.check_tag.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.event.inputs.release_version }}
          name: v${{ github.event.inputs.release_version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: unified-reporter-jar
          path: jar/

      - name: Upload JAR to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.event.inputs.release_version }}
          files: |
            jar/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}